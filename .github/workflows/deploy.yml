name: Deploy Lambda to AWS


on:
  workflow_dispatch:  # Allows manual triggering of the workflow

# on:
#   push:
#     branches:
#       - master  # Trigger on push to the main branch

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # Install Poetry
      - name: Install Poetry
        run: |
          pip install poetry

      # Install dependencies using Poetry
      - name: Install dependencies
        run: |
          poetry install

      # # Install dependencies (if any)
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt  # Add a requirements.txt file if needed
      #     pip install pytest pytest-cov  # Install pytest and pytest-cov for testing

      # Run tests using the Makefile
      - name: Run tests
        run: |
          make test

      # Zip the Lambda function code
      - name: Zip Lambda function code
        run: |
          poetry run make zip

      # Upload the coverage report to S3 using the Makefile
      - name: Upload coverage report to S3
        run: |
          poetry run make upload-coverage
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      # Clean up unneeded files
      - name: Clean files
        run: |
          poetry run make clean

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"  # Use the latest stable version

      # Configure AWS credentials  TODO: Set up Terraform
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your preferred region

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Validate Terraform configuration
      - name: Terraform Validate
        run: terraform validate

      # Plan Terraform changes
      - name: Terraform Plan
        run: terraform plan

      # Apply Terraform changes
      - name: Terraform Apply
        run: terraform apply -auto-approve